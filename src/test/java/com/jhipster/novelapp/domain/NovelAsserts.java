package com.jhipster.novelapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NovelAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNovelAllPropertiesEquals(Novel expected, Novel actual) {
        assertNovelAutoGeneratedPropertiesEquals(expected, actual);
        assertNovelAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNovelAllUpdatablePropertiesEquals(Novel expected, Novel actual) {
        assertNovelUpdatableFieldsEquals(expected, actual);
        assertNovelUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNovelAutoGeneratedPropertiesEquals(Novel expected, Novel actual) {
        assertThat(expected)
            .as("Verify Novel auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNovelUpdatableFieldsEquals(Novel expected, Novel actual) {
        assertThat(expected)
            .as("Verify Novel relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNovelUpdatableRelationshipsEquals(Novel expected, Novel actual) {
        assertThat(expected)
            .as("Verify Novel relationships")
            .satisfies(e -> assertThat(e.getGenres()).as("check genres").isEqualTo(actual.getGenres()))
            .satisfies(e -> assertThat(e.getTags()).as("check tags").isEqualTo(actual.getTags()))
            .satisfies(e -> assertThat(e.getAuthors()).as("check authors").isEqualTo(actual.getAuthors()));
    }
}
